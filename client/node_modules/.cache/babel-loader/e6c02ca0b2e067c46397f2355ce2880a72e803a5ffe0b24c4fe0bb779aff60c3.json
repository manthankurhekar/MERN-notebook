{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\MERN stack\\\\to_do_list\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    // const response = await fetch(`http://localhost:5000/api/auth/login`, {\n    //       method: \"GET\",\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"auth-token\":\n    //           \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTAzNzk2OX0.mVK3gm2Iu7I4wjyGweOkoVj3qYHZXMX2Qu3lvYgHXiI\",\n    //       },\n    //       body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n    // });\n    console.log(credentials);\n  };\n  const onchange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n    console.log(credentials.email, credentials.password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          name: \"email\",\n          id: \"email\",\n          \"aria-describedby\": \"emailHelp\",\n          onChange: onchange,\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputPassword1\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          name: \"password\",\n          onChange: onchange,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-2\",\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Fmy+/yaQk1Vpfwiw9rC9pbStOD0=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","onSubmit","e","preventDefault","console","log","onchange","target","name","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/MERN stack/to_do_list/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Login() {\r\n\r\n      const [credentials, setCredentials] = useState({email: \"\", password: \"\"});\r\n      const onSubmit = async (e) => {\r\n            e.preventDefault();\r\n            // const response = await fetch(`http://localhost:5000/api/auth/login`, {\r\n            //       method: \"GET\",\r\n            //       headers: {\r\n            //         \"Content-Type\": \"application/json\",\r\n            //         \"auth-token\":\r\n            //           \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTAzNzk2OX0.mVK3gm2Iu7I4wjyGweOkoVj3qYHZXMX2Qu3lvYgHXiI\",\r\n            //       },\r\n            //       body: JSON.stringify({ email: credentials.email, password: credentials.password }),\r\n            // });\r\n            console.log(credentials);\r\n      };\r\n\r\n      const onchange = (e) => {\r\n            setCredentials({...credentials, [e.target.name]: e.target.value});\r\n            console.log(credentials.email, credentials.password);\r\n      };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n<form>\r\n  <div className=\"form-group my-2\">\r\n    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" aria-describedby=\"emailHelp\" \r\n    onChange={onchange}\r\n    placeholder=\"Enter email\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={onchange} placeholder=\"Password\"/>\r\n  </div>\r\n  <button type=\"submit\" className=\"btn btn-primary my-2\" onClick={onSubmit}>Submit</button>\r\n</form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAACO,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EACzE,MAAMC,QAAQ,GAAG,MAAOC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMS,QAAQ,GAAIJ,CAAC,IAAK;IAClBJ,cAAc,CAAC;MAAC,GAAGD,WAAW;MAAE,CAACK,CAAC,CAACK,MAAM,CAACC,IAAI,GAAGN,CAAC,CAACK,MAAM,CAACE;IAAK,CAAC,CAAC;IACjEL,OAAO,CAACC,GAAG,CAACR,WAAW,CAACE,KAAK,EAAEF,WAAW,CAACG,QAAQ,CAAC;EAC1D,CAAC;EAEL,oBACEN,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC9BjB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BjB,OAAA;UAAOkB,OAAO,EAAC,oBAAoB;UAAAD,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDtB,OAAA;UAAOuB,IAAI,EAAC,OAAO;UAACP,SAAS,EAAC,cAAc;UAACF,IAAI,EAAC,OAAO;UAACU,EAAE,EAAC,OAAO;UAAC,oBAAiB,WAAW;UACjGC,QAAQ,EAAEb,QAAS;UACnBc,WAAW,EAAC;QAAa;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACNtB,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjB,OAAA;UAAOkB,OAAO,EAAC,uBAAuB;UAAAD,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvDtB,OAAA;UAAOuB,IAAI,EAAC,UAAU;UAACP,SAAS,EAAC,cAAc;UAACQ,EAAE,EAAC,UAAU;UAACV,IAAI,EAAC,UAAU;UAACW,QAAQ,EAAEb,QAAS;UAACc,WAAW,EAAC;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvH,CAAC,eACNtB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,sBAAsB;QAACW,OAAO,EAAEpB,QAAS;QAAAU,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAvCuBD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}