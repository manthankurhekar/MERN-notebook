{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\MERN stack\\\\to_do_list\\\\client\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n\n    // fuckyoubitch api call krna baki h\n    const note = {\n      _id: \"651592e78e8447e5ce77ba7d\",\n      user: \"650839f5198c1b129905c2d0\",\n      title: \"komal kambe\",\n      description: \"komal kambe.... This is a added note\",\n      tag: \"komal kambe\",\n      date: \"2023-09-28T14:51:19.682Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const deleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n\n    // fuckyoubitch api call krna baki h\n    console.log(\"Deleting note with id \", id);\n    const newNotes = notes.filter(note => {\n      return note._id != id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Update a Note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(\"Edited note with id\", id);\n    let foundIndex = notes.findIndex(note => note._id == id);\n    let tempNotes = notes;\n    tempNotes[foundIndex] = {\n      title,\n      description,\n      tag\n    };\n    setNotes(tempNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["createContext","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","_id","user","date","__v","concat","deleteNote","id","newNotes","filter","editNote","foundIndex","findIndex","tempNotes","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/MERN stack/to_do_list/client/src/context/notes/NoteState.js"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Get all notes\r\n  const getNotes = async () => {\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\",\r\n      },\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\",\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n\r\n    // fuckyoubitch api call krna baki h\r\n    const note = {\r\n      _id: \"651592e78e8447e5ce77ba7d\",\r\n      user: \"650839f5198c1b129905c2d0\",\r\n      title: \"komal kambe\",\r\n      description: \"komal kambe.... This is a added note\",\r\n      tag: \"komal kambe\",\r\n      date: \"2023-09-28T14:51:19.682Z\",\r\n      __v: 0,\r\n    };\r\n    setNotes(notes.concat(note));\r\n  };\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\",\r\n      },\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n    // fuckyoubitch api call krna baki h\r\n    console.log(\"Deleting note with id \", id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id != id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // Update a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjUwODM5ZjUxOThjMWIxMjk5MDVjMmQwIn0sImlhdCI6MTY5NTA2NDQxM30.yvIgCyHZ0awRBccM6EjaDwa2BOTAqvtqFK9fi0IAfLY\",\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = await response.json();\r\n\r\n    console.log(\"Edited note with id\", id);\r\n    let foundIndex = notes.findIndex((note) => note._id == id);\r\n    let tempNotes = notes;\r\n    tempNotes[foundIndex] = { title, description, tag };\r\n    setNotes(tempNotes);\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, setNotes, addNote, deleteNote, editNote, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAG,uBAAuB;EACpC,MAAMC,YAAY,GAAG,EAAE;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACQ,YAAY,CAAC;;EAEhD;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,0BAAyB,EAAE;MAC9DO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EACV;MACJ;IACF,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBN,QAAQ,CAACM,IAAI,CAAC;EAChB,CAAC;;EAED;EACA,MAAMG,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IACjD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,oBAAmB,EAAE;MACxDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EACV;MACJ,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,KAAK;QAAEC,WAAW;QAAEC;MAAI,CAAC;IAClD,CAAC,CAAC;;IAEF;IACA,MAAMI,IAAI,GAAG;MACXC,GAAG,EAAE,0BAA0B;MAC/BC,IAAI,EAAE,0BAA0B;MAChCR,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE,sCAAsC;MACnDC,GAAG,EAAE,aAAa;MAClBO,IAAI,EAAE,0BAA0B;MAChCC,GAAG,EAAE;IACP,CAAC;IACDpB,QAAQ,CAACD,KAAK,CAACsB,MAAM,CAACL,IAAI,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMM,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwB0B,EAAG,EAAC,EAAE;MACjEnB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EACV;MACJ;IACF,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;IAEjB;IACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEe,EAAE,CAAC;IACzC,MAAMC,QAAQ,GAAGzB,KAAK,CAAC0B,MAAM,CAAET,IAAI,IAAK;MACtC,OAAOA,IAAI,CAACC,GAAG,IAAIM,EAAE;IACvB,CAAC,CAAC;IACFvB,QAAQ,CAACwB,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAME,QAAQ,GAAG,MAAAA,CAAOH,EAAE,EAAEb,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IACtD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,yBAAwB0B,EAAG,EAAC,EAAE;MACjEnB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EACV;MACJ,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,KAAK;QAAEC,WAAW;QAAEC;MAAI,CAAC;IAClD,CAAC,CAAC;IACF,MAAMN,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IAElCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEe,EAAE,CAAC;IACtC,IAAII,UAAU,GAAG5B,KAAK,CAAC6B,SAAS,CAAEZ,IAAI,IAAKA,IAAI,CAACC,GAAG,IAAIM,EAAE,CAAC;IAC1D,IAAIM,SAAS,GAAG9B,KAAK;IACrB8B,SAAS,CAACF,UAAU,CAAC,GAAG;MAAEjB,KAAK;MAAEC,WAAW;MAAEC;IAAI,CAAC;IACnDZ,QAAQ,CAAC6B,SAAS,CAAC;EACrB,CAAC;EAED,oBACEpC,OAAA,CAACF,WAAW,CAACuC,QAAQ;IACnBC,KAAK,EAAE;MAAEhC,KAAK;MAAEC,QAAQ;MAAES,OAAO;MAAEa,UAAU;MAAEI,QAAQ;MAAEzB;IAAS,CAAE;IAAA+B,QAAA,EAEnErC,KAAK,CAACqC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACxC,EAAA,CAhGIF,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AAkGf,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}