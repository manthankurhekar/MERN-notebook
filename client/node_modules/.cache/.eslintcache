[{"C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Navbar.js":"3","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\About.js":"4","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Home.js":"5","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\context\\notes\\NoteState.js":"6","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\context\\notes\\noteContext.js":"7","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Notes.js":"8","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\NoteItem.js":"9","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Alert.js":"10","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\AddNote.js":"11","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Signup.js":"12","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Login.js":"13"},{"size":468,"mtime":1695885332043,"results":"14","hashOfConfig":"15"},{"size":1370,"mtime":1696154254779,"results":"16","hashOfConfig":"15"},{"size":2109,"mtime":1696144638523,"results":"17","hashOfConfig":"15"},{"size":875,"mtime":1696153967488,"results":"18","hashOfConfig":"15"},{"size":263,"mtime":1696118112069,"results":"19","hashOfConfig":"15"},{"size":2835,"mtime":1696154014996,"results":"20","hashOfConfig":"15"},{"size":111,"mtime":1695902919828,"results":"21","hashOfConfig":"15"},{"size":5374,"mtime":1696120454167,"results":"22","hashOfConfig":"15"},{"size":1099,"mtime":1696119220907,"results":"23","hashOfConfig":"15"},{"size":519,"mtime":1696117659614,"results":"24","hashOfConfig":"15"},{"size":2993,"mtime":1696153986842,"results":"25","hashOfConfig":"15"},{"size":2716,"mtime":1696154010357,"results":"26","hashOfConfig":"15"},{"size":2220,"mtime":1696153999110,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1dyxjj3",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\index.js",[],[],[],"C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\App.js",["77"],[],"C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Navbar.js",["78","79","80"],[],"import {React, useEffect} from 'react'\r\nimport {Link, useLocation, createBrowserRouter} from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n      let location = useLocation();\r\n      \r\n      // let browserRouter = createBrowserRouter();\r\n      useEffect(() => {\r\n      }, [location]);\r\n      const logout = () => {\r\n            localStorage.removeItem('auth');\r\n            // bs.pushState(null, null, '/login');\r\n      };\r\n  return (\r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to={localStorage.getItem('auth') ? \"/\" : \"#\"} >E-notes</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${location.pathname === '/' ? 'active' : ''}`} aria-current=\"page\" to={localStorage.getItem('auth') ? \"/\" : \"#\"}>Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className={`nav-link ${location.pathname === '/about' ? 'active' : ''}`} to={localStorage.getItem('auth') ? \"/about\" : \"#\"}>About</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {\r\n\r\n            localStorage.getItem('auth') ? \r\n            <form className=\"d-flex\">\r\n        <Link className=\"btn btn-outline-success\" to=\"/login\" type=\"submit\" onClick={logout}>Logout</Link>\r\n      </form>\r\n      :\r\n      <form className=\"d-flex\">\r\n        <Link className={`btn btn-outline-success ${location.pathname == '/login' ? 'active' : ''}`} to=\"/login\" type=\"submit\">Login</Link>\r\n        <Link className={`btn btn-outline-success ${location.pathname == '/signup' ? 'active' : ''} mx-2`} to=\"/signup\" type=\"submit\">Sign Up</Link>\r\n      </form>\r\n\r\n      }\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\About.js",["81","82","83","84"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Alert from \"./Alert\";\r\n\r\nexport default function About() {\r\n\r\n      const [greet, setGreet] = useState(\"\");\r\n      const [note, setNote] = useState({title: \"\", description: \"\", tag: \"\"});\r\n      const fetchUesr = async () => {\r\n            const response = await fetch(`http://localhost:5000/api/auth/getuser`, {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"auth-token\": `${localStorage.getItem('auth')}`,\r\n                  },\r\n            });\r\n            const json = await response.json();\r\n            setGreet(`${json.name}`);\r\n      } \r\n      useEffect( () => {\r\n            fetchUesr();\r\n      }, []);\r\n\r\n  return (\r\n      <>\r\n      <h1>{`Welcome, ${greet}`}</h1>\r\n      </>\r\n  );\r\n\r\n\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Home.js",["85","86"],[],"import React, { useContext } from \"react\";\r\nimport Notes from \"./Notes\";\r\nimport AddNote from \"./AddNote\";\r\n\r\nexport default function Home(props) {\r\n     \r\n  return (\r\n      <div>\r\n            <Notes showAlert = {props.showAlert} />\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\context\\notes\\NoteState.js",["87","88","89","90"],[],"import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const notesInitial = [];\r\n\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Get all notes\r\n  const getNotes = async () => {\r\n    const response = await fetch(`http://localhost:5000/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          `${localStorage.getItem('auth')}`,\r\n      },\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n      // TODO: API Call\r\n      // API Call \r\n      const response = await fetch(`http://localhost:5000/api/notes/addnote`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"auth-token\": `${localStorage.getItem('auth')}`\r\n        },\r\n        body: JSON.stringify({title, description, tag})\r\n      });\r\n  \r\n      const note = await response.json();\r\n      console.log(note);\r\n      setNotes(notes.concat(note))\r\n    };\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    const response = await fetch(`http://localhost:5000/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          `${localStorage.getItem('auth')}`,\r\n      },\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n    // fuckyoubitch api call krna baki h\r\n    console.log(\"Deleting note with id \", id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id != id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // Update a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    const response = await fetch(`http://localhost:5000/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\r\n          `${localStorage.getItem('auth')}`,\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = await response.json();\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes));\r\n    for(let ind = 0; ind < newNotes.length; ind++) {\r\n      const element = newNotes[ind];\r\n      if(element._id == id) {\r\n            newNotes[ind].title = title;\r\n            newNotes[ind].description = description;\r\n            newNotes[ind].tag = tag;\r\n            break;\r\n      }\r\n    }\r\n\r\n    setNotes(newNotes);\r\n\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, setNotes, addNote, deleteNote, editNote, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\context\\notes\\noteContext.js",[],[],"C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Notes.js",["91","92"],[],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport noteContext from \"../context/notes/noteContext\";\r\nimport NoteItem from \"./NoteItem\";\r\nimport AddNote from \"./AddNote\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Notes(props) {\r\n  const { notes, addNote, getNotes, editNote } = useContext(noteContext);\r\n  const [note, setNote] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\"});\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n      if(localStorage.getItem('auth')) {\r\n            getNotes();\r\n      } else {\r\n            navigate(\"/login\");\r\n      }\r\n  }, []); \r\n\r\n  const ref = useRef(null);\r\n  const refClose = useRef(null);\r\n\r\n  const updateNote = (currentNote) => {\r\n    ref.current.click();\r\n    setNote({id: currentNote._id, etitle: currentNote.title, edescription: currentNote.description, etag: currentNote.tag});\r\n  };\r\n\r\n  const onClick = (e) => {\r\n      console.log('Updating the note!');\r\n      editNote(note.id, note.etitle, note.edescription, note.etag);\r\n      window.scrollTo(0,0);\r\n      props.showAlert(\"Note edited Successfully\", \"success\")\r\n      refClose.current.click();\r\n      e.preventDefault();\r\n  };\r\n \r\n  const onChange = (e) => {\r\n      // fuckyoubitch\r\n      // this was very hard to understand but this is very useful\r\n      setNote({...note, [e.target.name]: e.target.value});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddNote showAlert = {props.showAlert}/>\r\n      <button\r\n        type=\"button\"\r\n        ref={ref}\r\n        className=\"btn btn-primary d-none\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n      >\r\n        Launch demo modal\r\n      </button>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Edit Note\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form className=\"my-3\">\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                    Title \r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"etitle\"\r\n                    name=\"etitle\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    onChange={onChange} \r\n                    value = {note.etitle}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"description\" className=\"form-label\">\r\n                    Description \r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"edescription\"\r\n                    name=\"edescription\"\r\n                    onChange={onChange} \r\n                    value = {note.edescription}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"tag\" className=\"form-label\">\r\n                    Tag\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"etag\"\r\n                    name=\"etag\"\r\n                    onChange={onChange} \r\n                    value = {note.etag}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n               ref={refClose}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              {/* note.edescription.length <= 5 ye wala check nahi lagaya abhi tak */}\r\n              <button onClick={onClick} disabled={note.etitle.length <= 3 || note.edescription.length <= 5} type=\"button\" className=\"btn btn-primary\" >\r\n                Update Note\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container py-3 my-1\">\r\n        <h1>Your notes</h1>\r\n        <div className=\"row my-4\">\r\n            {notes.length === 0 && <div className=\"col-md-3 mb-5 mx-1\">\r\n                  No Notes to display at the moment!\r\n                  Please add new notes...\r\n              </div>}\r\n          {notes.map((element) => {\r\n            return (\r\n              <div className=\"col-md-3 mb-5\" key={element._id}>\r\n                <NoteItem showAlert = {props.showAlert} note={element} updateNote={updateNote} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"d-flex justify-content-between\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\NoteItem.js",["93","94"],[],"import React, { useContext, useState } from \"react\";\r\nimport noteContext from \"../context/notes/noteContext\";\r\n\r\nexport default function NoteItem(props) {\r\n      const { deleteNote, editNote } = useContext(noteContext);\r\n      const { note, updateNote } = props;\r\n      \r\n  return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{note.title}</h5>\r\n            <p className=\"card-text\">\r\n              {note.description}\r\n            </p>\r\n            <p>\r\n                  <i className=\"fa-solid fa-trash fa-xl\" onClick={() => {\r\n                        deleteNote(note._id)\r\n                        window.scrollTo(0,0);\r\n                        props.showAlert(\"Note deleted Successfully\", \"success\")\r\n                  }}style={{color: \"#ff0000\"}}></i>\r\n                  <i className=\"fa-regular fa-pen-to-square fa-xl mx-2\" onClick={() => {\r\n                        updateNote(note)\r\n                  }} style={{color: \"#00ff1e\"}} ></i>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Alert.js",[],[],"C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\AddNote.js",["95","96"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport noteContext from \"../context/notes/noteContext\";\r\nimport Notes from \"./Notes\";\r\n\r\nexport default function AddNote(props) {\r\n  const { addNote, editNote } = useContext(noteContext);\r\n  const [greet, setGreet] = useState(\"\");\r\n      const [note, setNote] = useState({title: \"\", description: \"\", tag: \"\"});\r\n      const fetchUesr = async () => {\r\n            const response = await fetch(`http://localhost:5000/api/auth/getuser`, {\r\n                  method: \"GET\",\r\n                  headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"auth-token\": `${localStorage.getItem('auth')}`,\r\n                  },\r\n            });\r\n            const json = await response.json();\r\n            setGreet(`${json.name}`);\r\n      } \r\n      useEffect( () => {\r\n            fetchUesr();\r\n      }, []);\r\n      \r\n  const onClick = (e) => {\r\n      e.preventDefault();\r\n      addNote(note.title, note.description, note.tag);\r\n      window.scrollTo(0,0);\r\n      props.showAlert(\"Note added Successfully!\", \"success\");\r\n      setNote({title: \"\", description: \"\", tag: \"\"});\r\n  };\r\n \r\n  const onChange = (e) => {\r\n      // fuckyoubitch\r\n      // this was very hard to understand but this is very useful\r\n      setNote({...note, [e.target.name]: e.target.value});\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1>{`Welcome, ${greet}`}&nbsp;</h1>\r\n        <h1>Add a note...</h1>\r\n        <form className=\"my-3\">\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n              Title \r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              name=\"title\" \r\n              value={note.title}\r\n              aria-describedby=\"emailHelp\" onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"description\" className=\"form-label\">\r\n              Description \r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\" \r\n              name=\"description\" \r\n              value={note.description}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"tag\" className=\"form-label\">\r\n              Tag\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"tag\" \r\n              name=\"tag\" \r\n              value={note.tag}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <button disabled={note.title.length <= 3 || note.description.length <= 5} type=\"submit\" className=\"btn btn-primary\" onClick = {onClick}>\r\n            Add note\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Signup.js",["97"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nexport default function Signup(props) {\r\n\r\n      const [credentials, setCredentials] = useState({name: \"\", email: \"\", password: \"\"});\r\n      let navigate = useNavigate();\r\n      const onSubmit = async (e) => {\r\n            e.preventDefault();\r\n            const response = await fetch(`http://localhost:5000/api/auth/createuser`, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password }),\r\n            });\r\n            const json = await response.json();\r\n            console.log(json);\r\n            if(json.success == true) {\r\n                  localStorage.setItem('auth', json.authToken);\r\n                  navigate(\"/\");\r\n                  // swal(\"Hurray!\", `Account created Successfully`, \"success\");\r\n                  props.showAlert(\"Accounted Created Successfully!\", \"success\");\r\n            } else {\r\n                  swal(\"Error!\", `${json.err}`, \"error\");\r\n            }\r\n      };\r\n\r\n      const onchange = (e) => {\r\n            setCredentials({...credentials, [e.target.name]: e.target.value});\r\n            console.log(credentials.email, credentials.password);\r\n      };\r\n\r\n  return (\r\n      <div className=\"container\">\r\n      <form onSubmit={onSubmit}>\r\n       <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword2\">Name</label>\r\n          {/* ikde value dyachi garaj ahe ka kharach? */}\r\n          <input type=\"text\" className=\"form-control my-2\" id=\"name\" value={credentials.name} name=\"name\" onChange={onchange} placeholder=\"Name\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group my-2\">\r\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n          {/* value dyachi garaj ahe ka kharach? */}\r\n          <input type=\"email\" className=\"form-control my-2\" name=\"email\" value={credentials.email} id=\"email\" aria-describedby=\"emailHelp\" \r\n          onChange={onchange}\r\n          placeholder=\"Email\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n          {/* ikde value dyachi garaj ahe ka kharach? */}\r\n          <input type=\"password\" className=\"form-control my-2\" id=\"password\" value={credentials.password} name=\"password\" onChange={onchange} placeholder=\"Password\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary my-2\" onClick={onSubmit}>Register</button>\r\n      </form>\r\n          </div>\r\n  )\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\MERN stack\\to_do_list\\client\\src\\components\\Login.js",["98"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nexport default function Login(props) {\r\n\r\n      const [credentials, setCredentials] = useState({email: \"\", password: \"\"});\r\n      let navigate = useNavigate();\r\n      const onSubmit = async (e) => {\r\n            e.preventDefault();\r\n            const response = await fetch(`http://localhost:5000/api/auth/login`, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({ email: credentials.email, password: credentials.password }),\r\n            });\r\n            const json = await response.json();\r\n            console.log(json);\r\n            if(json.success == true) {\r\n                  localStorage.setItem('auth', json.authToken);\r\n                  navigate(\"/\");\r\n                  // swal(\"Hurray!\", `Logged in Successfully`, \"success\");\r\n                  props.showAlert(\"Logged in Successfully!\", \"success\");\r\n            } else {\r\n                  swal(\"Error!\", `${json.err}`, \"error\");\r\n            }\r\n      };\r\n\r\n      const onchange = (e) => {\r\n            setCredentials({...credentials, [e.target.name]: e.target.value});\r\n            console.log(credentials.email, credentials.password);\r\n      };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n<form >\r\n  <div className=\"form-group my-2\">\r\n    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n    {/* value dyachi garaj ahe ka kharach? */}\r\n    <input type=\"email\" className=\"form-control my-2\" name=\"email\" value={credentials.email} id=\"email\" aria-describedby=\"emailHelp\" \r\n    onChange={onchange}\r\n    placeholder=\"Enter email\"/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n    {/* ikde value dyachi garaj ahe ka kharach? */}\r\n    <input type=\"password\" className=\"form-control my-2\" id=\"password\" value={credentials.password} name=\"password\" onChange={onchange} placeholder=\"Password\"/>\r\n  </div>\r\n  <button type=\"submit\" className=\"btn btn-primary my-2\" onClick={onSubmit}>Login</button>\r\n</form>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"99","severity":1,"message":"100","line":5,"column":50,"nodeType":"101","messageId":"102","endLine":5,"endColumn":54},{"ruleId":"99","severity":1,"message":"103","line":2,"column":28,"nodeType":"101","messageId":"102","endLine":2,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":39,"column":71,"nodeType":"106","messageId":"107","endLine":39,"endColumn":73},{"ruleId":"104","severity":1,"message":"105","line":40,"column":71,"nodeType":"106","messageId":"107","endLine":40,"endColumn":73},{"ruleId":"99","severity":1,"message":"108","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"109","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"110","line":7,"column":14,"nodeType":"101","messageId":"102","endLine":7,"endColumn":18},{"ruleId":"99","severity":1,"message":"111","line":7,"column":20,"nodeType":"101","messageId":"102","endLine":7,"endColumn":27},{"ruleId":"99","severity":1,"message":"108","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"112","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":15},{"ruleId":"99","severity":1,"message":"113","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"104","severity":1,"message":"114","line":61,"column":23,"nodeType":"106","messageId":"107","endLine":61,"endColumn":25},{"ruleId":"99","severity":1,"message":"115","line":77,"column":11,"nodeType":"101","messageId":"102","endLine":77,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":82,"column":22,"nodeType":"106","messageId":"107","endLine":82,"endColumn":24},{"ruleId":"99","severity":1,"message":"116","line":8,"column":18,"nodeType":"101","messageId":"102","endLine":8,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":17,"column":6,"nodeType":"119","endLine":17,"endColumn":8,"suggestions":"120"},{"ruleId":"99","severity":1,"message":"121","line":1,"column":29,"nodeType":"101","messageId":"102","endLine":1,"endColumn":37},{"ruleId":"99","severity":1,"message":"122","line":5,"column":27,"nodeType":"101","messageId":"102","endLine":5,"endColumn":35},{"ruleId":"99","severity":1,"message":"123","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"99","severity":1,"message":"122","line":6,"column":20,"nodeType":"101","messageId":"102","endLine":6,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":20,"column":29,"nodeType":"106","messageId":"107","endLine":20,"endColumn":31},{"ruleId":"104","severity":1,"message":"105","line":20,"column":29,"nodeType":"106","messageId":"107","endLine":20,"endColumn":31},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'createBrowserRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'Alert' is defined but never used.","'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'AddNote' is defined but never used.","'createContext' is defined but never used.","Expected '!==' and instead saw '!='.","'json' is assigned a value but never used.","'addNote' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getNotes' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["124"],"'useState' is defined but never used.","'editNote' is assigned a value but never used.","'Notes' is defined but never used.",{"desc":"125","fix":"126"},"Update the dependencies array to be: [getNotes, navigate]",{"range":"127","text":"128"},[637,639],"[getNotes, navigate]"]